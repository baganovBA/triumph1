{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","currentTarget","select","color","addForm","order","Date","now","toString","id","name","type","table","huePickerChange","setState","console","log","rgb","hex","r","g","b","a","selectChange","event","target","value","changeAddString","inputName","inputValue","addStringToTable","preventDefault","localStorage","setItem","JSON","stringify","deleteString","newTable","filter","el","dragStartHandler","e","dragEndHandler","style","background","dragOverHandler","dropHandler","sortedOrder","map","card","sortCard","handlerChangeTableIntem","tr","vl","findIndex","length","this","parse","getItem","className","onChange","readOnly","width","onClick","sort","draggable","onDragStart","onDragLeave","onDragEnd","onDragOver","onDrop","height","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e93f57f2.chunk.js","sourcesContent":["import React from 'react'\nimport {HuePicker} from 'react-color'\nimport './App.css';\n\nclass App extends React.Component {\n  state={\n    currentTarget:'',\n    select:'hex',\n    color:'',\n    addForm:{\n      order:Date.now().toString(),\n      id:Date.now().toString(),\n      name:'',\n      type:'',\n      color: '',\n    },\n    table: [\n      \n    ]\n    \n  }\n  componentDidMount(){\n    if(localStorage.table && localStorage.table.length > 1){\n      this.setState({table:JSON.parse(localStorage.getItem('table'))})\n    }\n  }\n\n  huePickerChange = (color)=>{\n    this.setState({color:color}, ()=> console.log(this.state.color.rgb))\n    if (this.state.select == 'hex'){\n    this.setState({addForm:{...this.state.addForm, color:color.hex}})\n    }\n    else if(this.state.select == 'rgba'){\n      this.setState({addForm:{...this.state.addForm, color:`rgba(${color.rgb.r}, ${color.rgb.g}, ${color.rgb.b}, ${color.rgb.a})` }})\n    }else{\n      this.setState({addForm:{...this.state.addForm, color:`rgb(${color.rgb.r}, ${color.rgb.g}, ${color.rgb.b})` }})\n    }\n  }\n\n  selectChange =(event)=>{\n    this.setState({select:event.target.value})\n    console.log(event.target.value)\n    if(event.target.value == 'rgb'&& this.state.color.rgb){\n      const{r,g,b,a} = this.state.color.rgb\n      this.setState({addForm:{...this.state.addForm,color:`rgb(${r}, ${g}, ${b})` }})\n    }\n    else if(event.target.value == 'rgba' && this.state.color.rgb){\n      const{r,g,b,a} = this.state.color.rgb\n      this.setState({addForm:{...this.state.addForm,color:`rgba(${r}, ${g}, ${b}, ${a})` }})\n    }\n    else{\n      this.setState({addForm:{...this.state.addForm,color: this.state.color.hex}})\n    }\n  }\n\n  changeAddString = (event)=>{\n    var inputName = event.target.name;\n    var inputValue = event.target.value;\n    this.setState({addForm:{...this.state.addForm, [inputName]:inputValue}},() => console.log(this.state.addForm))\n}\n\n  addStringToTable = (event) =>{\n    event.preventDefault()\n    this.setState({table:[...this.state.table, {...this.state.addForm}]},()=> localStorage.setItem('table', JSON.stringify(this.state.table)))\n    this.setState({addForm:{name:'',type:'',color: '' , id:Date.now().toString(), order:Date.now().toString()}})\n  }\n\n  deleteString =(id)=>{\n    const newTable = this.state.table.filter((el)=> el.id !== id)\n    this.setState({table:newTable},()=> localStorage.setItem('table', JSON.stringify(this.state.table)))\n    \n  }\n\n  dragStartHandler = (e, el) =>{\n    console.log('drag',  el)\n    this.setState({currentTarget:el})\n  }\n  dragEndHandler=(e)=>{\n    e.target.style.background = 'none'\n\n  }\n  \n  dragOverHandler=(e)=>{\n    e.preventDefault()\n    e.target.style.background = 'lightgray'\n\n  }\n\n  dropHandler=(e,el)=>{\n    e.preventDefault()\n    console.log('drop',el)\n   const sortedOrder = this.state.table.map((card)=>{\n      if(card.id === el.id){\n        return {...card, order: this.state.currentTarget.order}\n      }\n      if(card.id === this.state.currentTarget.id){\n        return{...card, order:el.order}\n      }\n      return card\n    })\n    this.setState({table:sortedOrder})\n\n    e.target.style.background = 'none'\n  }\n\n  sortCard =(a,b)=>{\n    if(a.order > b.order){\n      return 1\n    }\n    else{\n      return -1\n    }\n  }\n\n  handlerChangeTableIntem = (e, id)=>{\n    console.log(e.target)\n    const tr = e.target.name\n    const vl = e.target.value\n    let idx = this.state.table.findIndex((el)=> el.id === id)\n    let newTable = this.state.table.map((el)=> {\n      if(el.id === id){\n        return {...el, [tr] : vl}\n      }else{\n        return el\n      }\n      \n    })\n    this.setState({table:[...newTable]},()=> localStorage.setItem('table', JSON.stringify(this.state.table)))\n    }\n\n  render(){\n    return (\n      <div className=\"App\">\n      <h1 className='title'>Редактор табличных данных</h1>\n      <form className='add_form'>\n        <p  className='add_form_item' >Имя<input onChange={this.changeAddString}  value = {this.state.addForm.name} name='name'/></p>\n        <p  className='add_form_item'>Тип<input  onChange={this.changeAddString} value = {this.state.addForm.type} name='type'/></p>\n        <p  className='add_form_item'>\n          Цвет \n          <select onChange={this.selectChange} className='add_form_select'>\n            <option>hex</option>\n            <option>rgb</option>\n            <option>rgba</option>\n          </select>\n          <input onChange={this.changeAddString}  value={this.state.addForm.color && this.state.addForm.color} name='color'readOnly />\n        </p>\n        \n        <p className='add_form_picker'><HuePicker width = {'100%'} color={this.state.addForm.color} onChange={this.huePickerChange} /></p>\n        <button className='add_form_button' onClick={this.addStringToTable}>Добавить</button>\n      </form>\n      <ul className = \"table\">\n        {this.state.table.length >0 ? this.state.table.sort(this.sortCard).map((el) => {\n          return <li \n          className=\"table_item\"\n           key={el.id}\n           draggable={true}\n           onDragStart={(e)=> this.dragStartHandler(e, el)}\n           onDragLeave={(e)=> this.dragEndHandler(e)}\n           onDragEnd={(e)=> this.dragEndHandler(e)}\n           onDragOver={(e)=> this.dragOverHandler(e)}\n           onDrop={(e)=> this.dropHandler(e,el)}\n           >\n             <input className='table_item_input' onChange={(e)=>this.handlerChangeTableIntem(e, el.id)} value ={el.name} name='name'></input> \n             <input className='table_item_input' onChange={(e)=>this.handlerChangeTableIntem(e, el.id)} value = {el.type} name='type'></input> \n             <input className='table_item_input' onChange={(e)=>this.handlerChangeTableIntem(e, el.id)} value ={el.color} name='color'></input>\n             <div style={{height:'50px', width:'50px', background:el.color}}></div>\n          <button className=\"table_item_button_delete\" onClick={()=>this.deleteString(el.id)}>\n            Удалить\n          </button> \n          </li>}): <p>Таблица пуста</p>}\n      </ul>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}